services:
  db:
    image: ccr.ccs.tencentyun.com/kawaro/postgres:15
    platform: linux/amd64
    container_name: texas-postgres
    restart: always
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - texas-net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: ccr.ccs.tencentyun.com/kawaro/redis:7
    platform: linux/amd64
    container_name: texas-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - texas-net
    command: ["redis-server", "--appendonly", "yes", "--appendfsync", "always"]
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: infra/docker/bot.Dockerfile
      platforms:
        - linux/amd64
    container_name: texas-bot
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    working_dir: /app
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - texas-net

  worker:
    build:
      context: .
      dockerfile: infra/docker/celery.Dockerfile
      platforms:
        - linux/amd64
    container_name: texas-worker
    restart: always
    env_file:
      - .env
    volumes:
      - ./:/app
    working_dir: /app
    command:
      - bash
      - -c
      - |
        celery -A tasks.celery_app worker --loglevel=info &
        celery -A tasks.celery_app beat --loglevel=info
    environment:
      TZ: ${TZ}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - texas-net

  mattermost:
    platform: linux/amd64
    image: ccr.ccs.tencentyun.com/kawaro/${MATTERMOST_IMAGE}:latest
    container_name: mattermost
    restart: always
    security_opt:
      - no-new-privileges:true
    pids_limit: 200
    read_only: ${MATTERMOST_CONTAINER_READONLY}
    tmpfs:
      - /tmp
    volumes:
      - ${MATTERMOST_CONFIG_PATH}:/mattermost/config:rw
      - ${MATTERMOST_DATA_PATH}:/mattermost/data:rw
      - ${MATTERMOST_LOGS_PATH}:/mattermost/logs:rw
      - ${MATTERMOST_PLUGINS_PATH}:/mattermost/plugins:rw
      - ${MATTERMOST_CLIENT_PLUGINS_PATH}:/mattermost/client/plugins:rw
      - ${MATTERMOST_BLEVE_INDEXES_PATH}:/mattermost/bleve-indexes:rw
    environment:
      TZ: ${TZ}
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable&connect_timeout=10
      MM_BLEVESETTINGS_INDEXDIR: /mattermost/bleve-indexes
      MM_SERVICESETTINGS_SITEURL: ${MM_SERVICESETTINGS_SITEURL}
    ports:
      - "8065:8065"
      - "${CALLS_PORT}:${CALLS_PORT}/udp"
      - "${CALLS_PORT}:${CALLS_PORT}/tcp"
    depends_on:
      - db
    networks:
      - texas-net

  adminer:
    image: docker.1ms.run/library/adminer:latest
    platform: linux/amd64
    container_name: texas-adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - texas-net
    profiles:
      - admin

  redisinsight:
    image: docker.1ms.run/redislabs/redisinsight:latest
    platform: linux/amd64
    container_name: texas-redisinsight
    restart: always
    ports:
      - "5540:5540"
    depends_on:
      - redis
    environment:
      - RI_ACCEPT_TERMS_AND_CONDITIONS=true
      - RI_REDIS_HOST=redis
      - RI_REDIS_PORT=6379
      - RI_REDIS_ALIAS=LocalRedis
      - RI_REDIS_DB=0
    networks:
      - texas-net
    profiles:
      - admin

  qdrant:
    image: docker.1ms.run/qdrant/qdrant:latest
    platform: linux/amd64
    container_name: texas-qdr
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: always
    networks:
      - texas-net

networks:
  texas-net:
    driver: bridge

volumes:
  qdrant_storage:
    driver: local
