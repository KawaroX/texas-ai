# Texas AI - Mattermost 智能助手系统

Texas AI 是一个基于 FastAPI + Mattermost WebSocket 的 AI 助手系统，支持被动与主动对话，具备模块化架构、任务调度、向量检索、角色个性等功能。

---

## 📦 项目结构

```
texas-ai/
├── app/                  # FastAPI 入口 & WebSocket 客户端
├── core/                 # 对话、检索、生成等 AI 核心逻辑
├── services/             # Qdrant / Supabase / 嵌入服务
├── tasks/                # Celery 任务系统
├── models/               # 数据结构定义
├── data/                 # 持久化数据库目录（如 PostgreSQL）
├── infra/docker/         # 构建镜像的 Dockerfile 文件
├── .env.template         # 环境变量模板
├── requirements.txt      # 依赖包列表
├── docker-compose.yml    # 多服务集成部署文件
└── README.md             # 项目说明文档
```

---

## 🚀 快速启动（本地）

### 1. 安装依赖（建议使用 Docker Desktop）

- 安装 [Docker Desktop](https://www.docker.com/products/docker-desktop/)
- 确保已安装 `docker`, `docker compose`

### 2. 克隆项目并初始化

```bash
cp .env.template .env
docker compose up --build -d
```

	•	启动成功后：
	•	FastAPI: http://localhost:8000
	•	PostgreSQL: 本地端口 5432
	•	Redis: 本地端口 6379

⸻

☁️ 云端部署（火山引擎 / 腾讯云等）
	1.	安装 Docker + Docker Compose
	2.	上传整个项目文件夹（含 .env）
	3.	执行：

docker compose up --build -d

✅ 云端环境建议使用 Ubuntu 22.04+，2 vCPU / 4GB 内存起步，系统盘 30–50GB，数据盘 10–20GB。

⸻

📌 重要说明
	•	所有配置项集中在 .env 文件中管理
	•	PostgreSQL 数据挂载至 ./data/postgres，可随时迁移/备份
	•	FastAPI 主程序自动连接 Mattermost WebSocket，实现实时响应
	•	Celery 后台处理主动推送、计划任务等异步流程

⸻

🧠 下一步开发建议
	•	实现 app/mattermost_client.py，连接 WebSocket 并处理事件
	•	在 core/ 中填充对话逻辑和嵌入引擎
	•	在 services/ 中配置 Qdrant / Supabase 连接
	•	在 tasks/ 中注册定时任务（主动推送）

⸻

📮 联系方式

如需进一步支持、优化部署结构、模型适配等开发帮助，请联系开发者。
